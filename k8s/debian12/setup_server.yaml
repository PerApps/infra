---
- name: SetupServer
  hosts: k8s_master, k8s_worker
  become: yes

  tasks:
    - name: Enable IPv4 packet forwarding
      copy:
        content: |
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
        owner: root
        group: root
        mode: '0644'

    - name: Apply sysctl parameters without reboot
      command: sysctl --system

    - name: Download containerd binary
      ansible.builtin.get_url:
        url: https://github.com/containerd/containerd/releases/download/v1.7.24/containerd-1.7.24-linux-amd64.tar.gz
        dest: /tmp/containerd.tar.gz
        mode: '0644'

    - name: Extract containerd binary
      ansible.builtin.unarchive:
        src: /tmp/containerd.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Create /usr/local/lib/systemd/system directory
      ansible.builtin.file:
        path: /usr/local/lib/systemd/system
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy containerd.service file to remote host
      ansible.builtin.copy:
        src: containerd.service
        dest: /usr/local/lib/systemd/system/containerd.service
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd manager configuration
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start containerd service
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Download containerd runc
      ansible.builtin.get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.2.3/runc.amd64
        dest: /tmp/runc.amd64
        mode: '0644'

    - name: Copy runc binary to /usr/local/bin
      ansible.builtin.copy:
        src: /tmp/runc.amd64
        dest: /usr/local/bin/runc
        owner: root
        group: root
        mode: '0755'
        remote_src: yes

    - name: Download containerd cni plugins
      ansible.builtin.get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.6.1/cni-plugins-linux-amd64-v1.6.1.tgz
        dest: /tmp/cni-plugins.tar.gz
        mode: '0644'

    - name: Create /opt/cni/bin directory
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Extract containerd cni plugins
      ansible.builtin.unarchive:
        src: /tmp/cni-plugins.tar.gz
        dest: /opt/cni/bin
        remote_src: yes


    - name: Create /etc/containerd/ directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy config.toml file to remote host
      ansible.builtin.copy:
        src: config.toml
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '0644'

    - name: Restart containerd service
      ansible.builtin.systemd:
        name: containerd
        state: restarted

    - name: Install required packages by k8s
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    - name: Create /etc/apt/keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Download and save Kubernetes apt keyring
      ansible.builtin.shell:
        cmd: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Create Kubernetes sources list file
      ansible.builtin.copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /
        owner: root
        group: root
        mode: '0644'

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install 1.31 version of kubelet, kubeadm, and kubectl
      ansible.builtin.apt:
        name:
          - kubelet=1.31.*
          - kubeadm=1.31.*
          - kubectl=1.31.*
        state: present
        update_cache: yes

    - name: Hold kubelet, kubeadm, and kubectl at current version
      ansible.builtin.shell:
        cmd: |
          sudo apt-mark hold kubelet kubeadm kubectl

    - name: Enable and start kubelet service
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started
